#!/usr/bin/make -f
# -*- makefile -*-

export DH_VERBOSE=1
export DH_OPTIONS

DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/buildflags.mk

PYVERS := $(shell pyversions -vr)

export GTEST_FILTER = "-CgroupsAnyHierarchyWithCpuMemoryFreezerTest.*"
export DEB_LDFLAGS_MAINT_APPEND=-Wl,--as-needed,-lsnappy
export DEB_BUILD_OPTIONS=parallel=$(shell grep "core id" -c /proc/cpuinfo)

override_dh_auto_configure:
	dh_auto_configure -- --prefix=/usr \
		--localstatedir=/usr/lib/ \
		--libexecdir=/usr/lib/ \
		--without-cxx11 \
		--enable-optimize \
		--with-network-isolator

override_dh_auto_build:
	dh_auto_build
	# Build Python bindings
	cd src/python && \
		for pv in $(PYVERS); do \
			python$$pv setup.py build --build-base=$(CURDIR)/src/python/build --root=$(CURDIR)/debian/tmp --install-layout=deb ;\
		done

override_dh_install:
	# Install Python bindings
	for pv in $(PYVERS); do \
			cd src/python/native && python$$pv setup.py build --build-base=$(CURDIR)/src/python/build install --root=$(CURDIR)/debian/tmp --install-layout=deb &&\
			cd ../interface && python$$pv setup.py  build --build-base=$(CURDIR)/src/python/build install --root=$(CURDIR)/debian/tmp --install-layout=deb &&\
			cd .. && python$$pv setup.py  build --build-base=$(CURDIR)/src/python/build install --root=$(CURDIR)/debian/tmp --install-layout=deb ;\
		done; \
	done
	dh_install

override_dh_auto_test:
	# Because cgroup test dependencies might not be available when building within docker
	# just skip them completely.
	true

%:
	dh $@ --parallel --with autoreconf --with python2


